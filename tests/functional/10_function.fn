fun greeting(n) {
	println(n);
}

greeting("Hello, Functions");

// Outer function which will call the inner one.
fun outer(a) {
	inner(a);
}

fun inner(b) {
	print("inside inner(): ");
	println(b);
}

outer(42);

// Late binding: the global variable gA is referenced
// inside this function *before* it had been defined.
// Inportant point is that this function must be called
// *after* actual definition of the global variable.
fun printGlobal() {
	print("gA = ");
	println(gA);
}

var gA = 42;
printGlobal();

// Recursive call. The limit is 62 call frames.
fun recursiveCall(n) {
	if (n == 62)
		return n;
	
	n = n + 1;
	return recursiveCall(n);
}

println(recursiveCall(0));